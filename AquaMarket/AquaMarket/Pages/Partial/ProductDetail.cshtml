@using AquaMarket_DTO
@using AquaServer.Domain.Account.Actions.Helper
@model AccessoryInfo
@{
    <style>
        .btn-outline-orange:not(:hover) {
            background-color: white;
            color: darkorange;
            border-color: darkorange;
        }

        .btn-outline-orange:hover {
            background-color: darkorange;
            color: white;
        }

        button:has(edit) {
            display: none;
        }

        .show-only {
            pointer-events: none;
            border-color:transparent;
        }

        textarea {
            overflow-y:hidden;
        }

    </style>
    <div class="d-flex flex-column mx-3">
        <div class="d-flex flex-row justify-content-evenly">
            <div class="d-flex flex-column">
                <!-- Product image-->
                @{
                    string pic = Model?.Article.Trim() + ".jpg";
                }
                <iframe name="dummy" id="dummy" class="d-none"></iframe>
                <form method="post" target="dummy" enctype="multipart/form-data" class="d-none" id="pictureForm" >
                    <input type="hidden" name="article" value="@Model?.Article" /><br>
                    <input type="file" name="picture" accept="image/*" onchange="PictureChange(this)"/><br>
                    <input formaction="api/catalogue/product/@Model?.Article/picture" type="submit" />
                </form>
                <img src="~/accessory/@pic" class="w-100" id="product-image" style="height:fit-content" onerror="this.onerror=null; this.src='https://dummyimage.com/450x300/dee2e6/6c757d.jpg'" alt="@Model?.Title" />
                @if (User?.Identity?.IsAuthenticated == true)
                {
                    if (User?.IsInRole(AccessRole.Client) == true)
                    {
                        <button class="btn mt-3 btn-outline-orange add-to-cart" id="@Model?.Article" onclick="AddToCart(this)">Добавить в корзину</button>
                    }
                    else if (User?.IsInRole(AccessRole.Manager) == true)
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" onclick="UploadImage()" width="16" height="16" fill="currentColor" style="visibility:collapse;cursor:pointer" class="bi bi-upload grow-ico" viewBox="0 0 16 16">
                        <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z" />
                        <path d="M7.646 1.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 2.707V11.5a.5.5 0 0 1-1 0V2.707L5.354 4.854a.5.5 0 1 1-.708-.708l3-3z" />
                    </svg>
                        <button class="btn mt-3 btn-outline-orange edit-btn" id="@Model?.Article" onclick="EditClick(this.id)">Редактировать</button>
                    }
                }
            </div>
            <div class="d-flex flex-column ms-5">
                <textarea wrap="soft" type="text" class="lead fs-5 show-only editable" id="productDetailTitle" value="@Model?.Title">@Model?.Title</textarea>
                <hr>
                <p class="d-flex flex-row">
                    Артикул:
                    <span>
                        @Model?.Article
                    </span>
                </p>
                <p class="d-flex flex-row">
                    Тип:
                    <span id="productDetailType" data-type="@Model?.AccessoryType?.Id">
                        @Model?.AccessoryType?.Title
                    </span>
                </p>
                <hr>
                <p class="d-flex flex-row">
                    Цена:
                    <input type="number" class="show-only editable" id="productDetailPrice" value="@Model?.Price.ToString().Replace(',','.')">
                </p>
            </div>
        </div>
        <textarea wrap="soft" class="mt-3 show-only editable" id="productDetailDescription" value="@Model?.Description" type="text">@Model?.Description</textarea>
    </div>
}